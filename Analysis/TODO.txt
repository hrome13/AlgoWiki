(DONE) 1. For ___ Improvements Heatmaps
    - Flip the x-axis (worse on left)
    - Move x-ticks to top

(DONE) 2. Create new heatmap showing only the jumps from first algorithm to best algorithm

3. For the Pareto graphs
    - Draw the frontier with a line ?

(DONE) 4. Create a 100% histogram showing percentage of problems with an optimal algorithm over time
    - See ipad drawing (% with tradeoff, % with optimal)

(DONE) 5. Make the Pareto examples pretty
    - Clean up titles and years
    - denote parallel/quantum algorithms differently

(DONE) 6. Pie charts
    - Recreate the pie charts from Emily's paper but with space (EXCEL)

(DONE) 7. Make the Space Analysis Per Decade chart but with Percentages

(DONE) 8. Histogram of the implied lower bound powers

9. Fix hist_improvements()

10. Fix heat_size_of_improvements()

11. Fix hist_space_and_time_improvements_per_decade()

(DONE) 12. try a version of the pareto examples where you:
    - drop the parallel implementations
    -drop the decade coloring and legend
    -put arrows going from chronologically first to second, second to third, etc.

(DONE) 13. On all versions with a legend, switch 2010’s to 2010s, 2000’s to 2000s, etc.

(DONE?) 14. On versions put “Space Complexity (Augmented)”  @Jayson Lynch: please advise if another label would be better

(DONE) 15. On space analysis per decade:
    -drop decimal places and drop bolding from bar labels
    -use colors in line with charts from time complexity paper
    -cut off y-axis at 100%
    -change title to Percentage of algorithm papers with space complexity analysis (and drop y-axis title)
    -move legend off the bars
    -get the various font sizes more similar

(DONE) 16. For Problems with Space-Time…
    -same changes from other histogram, plus…
    -change title to: Time complexity – space complexity tradeoffs
    -change legend categories to “Single algorithm optimal” and “Time-space tradeoff”
    -is what is shown the flow of new algorithms or the stock of all existing?

(DONE) 17. For Proportion of Algorithms that Improve…
    -Try changing to a pie chart, using same colors as lower bounds paper
    -List as percentages


(DONE) Send Jayson tables for pies

On Domain pages,
    - Change "Related Problems" to "Problems within "Domain"

Add lower bounds
    - Label the lines as lower/upper bounds

Are the bumps from when storage was small and space needed to be optimized?



---------------------------

Determine how to deal with multiple parameters

Calculate input/output sizes

Double check all complexity -> class


Feedback from Neil's presentation
- high level, very interested
- how do we know the questions in the textbook are the right base set?
    - no one has any better alternatives
- each problem is weighted equally.. what about weighting them based on popularity?
    - how often are the wikipedia pages accessed?
    - google trend analysis
    - at the family-level
- maybe also look at the specific algorithm pages, looking at the top 100 algorithms on wikipedia as the base set
- external memory models?
- bioinformatics side project? (might be too deep)


0 - gather the rest

0.001 - categorize into issues
    - missing reference
    - etc.

1 - double check


how many space complexities are non-trivial/interesting?
    - for how many, do we have space = time vs not equal?
    - for how many, space super-linear?
    - trivial vs longer proof? (just looking at the "reference" cell or on overleaf)
        - if proofs are particularly interesting/involved
        - motif search is interesting i think
        - might make an interesting separate paper with a few more involved proofs
    

Paper sections
--------------

Introduction:
    - big picture, why important/care
    - main results

(me / Jayson) Past work:
    - Yash's paper
    - Emily's thesis

(Chirag) Background:
    - what is space complexity?
        - survey in TCS
    - why does it matter?
        - survey in practical computing size

(me) Results:
    - graphs
    - each with a paragraph
        - what it is in detail
        - what analysis went into it
        - sentence or so of discussion/interpretation

Methodology:
    - how these problems were chosen from prior paper  
        - how we chose subsection of problems to consider
    - (Jeffrey) how we gathered space complexity information
    - (me) how we derived our analysis

How to present the overleaf with the derivations or the raw data in some form


Timeline
--------
this week: do all the 0.001 categorizations, send to the group

2-3 weeks


Make a list of assumptions
    - e.g. V = O(E^2)
    - choose the parameter relationship that makes the runtime the "worst", 

Divide matrix multiplication by 2 (in terms of n^2)

Make the "time complexity class" column with multiple parameters like with space

create overleaf for paper